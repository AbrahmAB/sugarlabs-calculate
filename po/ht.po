# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2008-01-26 11:55-0500\n"
"PO-Revision-Date: 2010-10-12 23:24+0200\n"
"Last-Translator: frannyberry <frannyberry@writeme.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ht\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n !=1);\n"
"X-Generator: Pootle 2.0.3\n"

#: activity/activity.info:2
msgid "Calculate"
msgstr "Kalkile"

#: calculate.py:80
#, python-format
msgid "Equation.parse() string invalid (%s)"
msgstr "Equation.parse() cèn sa pa bon ditou (%s)"

#: calculate.py:210
msgid "Available functions:"
msgstr "Fonksyon ki disponib, ou kapab itilize:"

#: calculate.py:504
#, python-format
msgid "Writing to journal (%s)"
msgstr "Ekri li nan jounal an (%s)"

#: calculate.py:788
msgid "button_pressed(): invalid type"
msgstr "button_pressed(): tip bouton, fonksyon sa a pa bon"

#: eqnparser.py:33
msgid "Parse error"
msgstr "Izole erè"

#: eqnparser.py:58
#, python-format
msgid "level: %d, ofs %d"
msgstr "nivo: %d, ofs %d"

#: eqnparser.py:117
#, python-format
msgid "Error at %d"
msgstr "Erè nan %d"

#: eqnparser.py:249 eqnparserhelp.py:128
msgid "Use help(test) for help about 'test', or help(index) for the index"
msgstr "Sèvi èd (tèks) pou èd o sijè 'tèks', oubyen èd (endèks) pou endèks la"

#: eqnparser.py:353 eqnparser.py:354
#, python-format
msgid "Function '%s' not defined"
msgstr "Fonksyon '%s' pa defini"

#: eqnparser.py:359
#, python-format
msgid "Invalid number of arguments (%d instead of %d)"
msgstr "Kantite agiman pa valab (%d olye de %d)"

#: eqnparser.py:360
#, python-format
msgid "function takes %d args"
msgstr "Fonksyon pwan %d args"

#: eqnparser.py:370 eqnparser.py:371
#, python-format
msgid "Unable to parse argument %d: '%s'"
msgstr "Pa kapab divize agiman %d: '%s'"

#: eqnparser.py:380
#, python-format
msgid "Function error: %s"
msgstr "Erè fonksyon: %s"

#: eqnparser.py:481
#, python-format
msgid "Variable '%s' not defined"
msgstr "Varyab '%s' pa defini"

#: eqnparser.py:504
msgid "Left parenthesis unexpected"
msgstr "Pa atann a parantèz goch"

#: eqnparser.py:516
msgid "Parse error (right parenthesis)"
msgstr "Izole erè (parantèz dwat)"

#: eqnparser.py:517 eqnparser.py:528 eqnparser.py:535 eqnparser.py:610
msgid "Right parenthesis unexpected"
msgstr "Pa atann Parantèz dwat"

#: eqnparser.py:527
msgid "Parse error (right parenthesis, no left_val)"
msgstr "Izole erè (parantèz dwat, pa gen valè goch)"

#: eqnparser.py:534
msgid "Parse error (right parenthesis, no level to close)"
msgstr "Izole erè (parantèz dwat, pa gen pozisyon a fèmen)"

#: eqnparser.py:541 eqnparser.py:542
msgid "Number not expected"
msgstr "Pa atann a yon nonb"

#: eqnparser.py:550
msgid "Operator not expected"
msgstr "pa atann a operatè"

#: eqnparser.py:566
msgid "Parse error: number or variable expected"
msgstr "Izole erè: nonb oubyen variab espere"

#: eqnparser.py:567
msgid "Number or variable expected"
msgstr "Nonb oubyen variab espere"

#: eqnparser.py:596
msgid "Invalid operator"
msgstr "Operatè invalid"

#: eqnparser.py:603
msgid "Operator expected"
msgstr "Operatè pa espere"

#: eqnparser.py:616
msgid "_parse(): returning None"
msgstr "_Separe(): pa retounen anyen"

#. TRANS: It is possible to translate commands. However, I would highly
#. recommend NOT doing so for mathematical functions like cos(). help(),
#. functions() etc should be translated.
#: eqnparserhelp.py:39
msgid "acos"
msgstr "acos"

#: eqnparserhelp.py:40
msgid ""
"acos(x), return the arc cosine of x. This is the angle for which the cosine "
"is x. Defined for -1 <= x < 1"
msgstr ""
"acos(x), retounen ak kosinis X. Sa se ang kote kosinis lan se x. defini pou "
"-1 <= x < 1"

#: eqnparserhelp.py:43
msgid "and"
msgstr "and"

#: eqnparserhelp.py:44
msgid ""
"and(x, y), logical and. Returns True if x and y are True, else returns False"
msgstr "and(x, y) and logik. Retounen vrè si x ak y vrè, san sa retounen fo"

#: eqnparserhelp.py:46
msgid "asin"
msgstr "asin"

#: eqnparserhelp.py:47
msgid ""
"asin(x), return the arc sine of x. This is the angle for which the sine is "
"x. Defined for -1 <= x <= 1"
msgstr ""
"asin(x), retounen ak sinis x la. Sa se ang kote sinis lan se x. defini pou "
"-1 <= x <= 1"

#: eqnparserhelp.py:50
msgid "atan"
msgstr "atan"

#: eqnparserhelp.py:51
msgid ""
"atan(x), return the arc tangent of x. This is the angle for which the "
"tangent is x. Defined for all x"
msgstr ""
"atan(x), retounen ak tanjant x. Sa se ang kote tanjant lan se x. defini pou "
"tout x"

#: eqnparserhelp.py:54
msgid "cos"
msgstr "cos"

#: eqnparserhelp.py:55
msgid ""
"cos(x), return the cosine of x. This is the x-coordinate on the unit circle "
"at the angle x"
msgstr ""
"cos(x), retounen kosinis x la. Sa se koòdone x la sou sèk inite a nan ang x "
"la"

#: eqnparserhelp.py:58
msgid "cosh"
msgstr "cosh"

#: eqnparserhelp.py:59
msgid ""
"cosh(x), return the hyperbolic cosine of x. Given by (exp(x) + exp(-x)) / 2"
msgstr ""
"cosh(x), retounen kosinis ipèbolik x. ke (exp(x) + exp(-x)) / 2 bay kòm "
"rezilta"

#: eqnparserhelp.py:61
msgid "exp"
msgstr "exp"

#: eqnparserhelp.py:62
msgid "exp(x), return the natural exponent of x. Given by e^x"
msgstr "exp(x), retounen eksponansyèl natirèl x. ke e^x te bay kom rezilta"

#: eqnparserhelp.py:64
msgid "fac"
msgstr "Fac"

#: eqnparserhelp.py:65
msgid "fac(x), return the factorial of x. Given by x * (x - 1) * (x - 2) * ..."
msgstr "fac(x), retounen faktè x. ke x * (x -1) * (x - 2) * ... bay kòm rezilta"

#. TRANS: This command is descriptive, so can be translated
#: eqnparserhelp.py:68
msgid "functions"
msgstr "Fonksyon yo"

#: eqnparserhelp.py:69
msgid "functions(), return a list of all the functions that are defined"
msgstr "fonksyon(), retounen yon lis tout fonksyon ki defini yo"

#: eqnparserhelp.py:71
msgid "ln"
msgstr "ln"

#: eqnparserhelp.py:72
msgid ""
"ln(x), return the natural logarithm of x. This is the value for which the "
"exponent exp() equals x. Defined for x >= 0."
msgstr ""
"ln(x), retounen logarit natirèl x. Sa se valè kote eksponan exp() egal x. "
"defini pa x >= 0."

#. TRANS: This command is descriptive, so can be translated
#: eqnparserhelp.py:76
msgid "operators"
msgstr "operatè yo"

#: eqnparserhelp.py:77
msgid "operators(), return a list of the operators that are defined"
msgstr "Operatè(), retounen yon lis operatè ki deja defini"

#: eqnparserhelp.py:79
msgid "or"
msgstr "or"

#: eqnparserhelp.py:80
msgid ""
"or(x, y), logical or. Returns True if x and/or y are True, else return False"
msgstr ""
"or(x,y), lojikal or. retounen vrè si x ak/oubyen y vrè, kontrèman retounen "
"fo"

#: eqnparserhelp.py:82
msgid "plot"
msgstr "plot"

#: eqnparserhelp.py:83
msgid ""
"plot(eqn, var=-a..b), plot the equation 'eqn' with the variable 'var' in the "
"range from a to b"
msgstr ""
"plot(eqn, var=-a...b), balanse ekwasyon 'eqn' ak variab 'var' antre a ak b"

#: eqnparserhelp.py:86
msgid "sin"
msgstr "sin"

#: eqnparserhelp.py:87
msgid ""
"sin(x), return the sine of x. This is the y-coordinate on the unit circle at "
"the angle x"
msgstr "sin(x), retounen sinis x. Sa se koòdone y sou sèk inite-a nan ang x"

#: eqnparserhelp.py:90
msgid "sinh"
msgstr "sinh"

#: eqnparserhelp.py:91
msgid ""
"sinh(x), return the hyperbolic sine of x. Given by (exp(x) - exp(-x)) / 2"
msgstr "sinh(x), retounen ipèbòl sinis x. ke (exp(x) - exp (-x)) / 2 bay"

#: eqnparserhelp.py:93
msgid "sqrt"
msgstr "sqrt"

#: eqnparserhelp.py:94
msgid ""
"sqrt(x), return the square root of x. This is the value for which the square "
"equals x. Defined for x >= 0."
msgstr ""
"sqrt(x), retounen rasin kare x. Sa se valè rasin kare x. defini pou x >= 0."

#: eqnparserhelp.py:97
msgid "square"
msgstr "Kare"

#: eqnparserhelp.py:98
msgid "square(x), return the square of x. Given by x * x"
msgstr "Kare(x), retounen rasin kare x. ke x * X bay"

#: eqnparserhelp.py:101
msgid "tan"
msgstr "tan"

#: eqnparserhelp.py:102
msgid ""
"tan(x), return the tangent of x. This is the slope of the line from the "
"origin of the unit circle to the point on the unit circle defined by the "
"angle x. Given by sin(x) / cos(x)"
msgstr ""
"tan(x), retounen tanjant x. Sa se pant liy lan soti nan orijin sèk inite-a "
"rive pwen sou sèk inite defini pa ang x la. ke sin(x) / cos(x) bay la"

#: eqnparserhelp.py:106
msgid "tanh"
msgstr "tanh"

# vgYNE4  <a href="http://gxpgrmqnnyka.com/">gxpgrmqnnyka</a>, [url=http://uginbyoubxts.com/]uginbyoubxts[/url], [link=http://dcflidnouvfp.com/]dcflidnouvfp[/link], http://vvyapovksxrm.com/
#: eqnparserhelp.py:107
#, fuzzy
msgid "sinh(x), return the hyperbolic tangent of x. Given by sinh(x) / cosh(x)"
msgstr ""
"vgYNE4  <a href=\"http://gxpgrmqnnyka.com/\">gxpgrmqnnyka</a>, "
"[url=http://uginbyoubxts.com/]uginbyoubxts[/url], "
"[link=http://dcflidnouvfp.com/]dcflidnouvfp[/link], http://vvyapovksxrm.com/"

#: eqnparserhelp.py:109
msgid "test"
msgstr "tès"

#: eqnparserhelp.py:110
msgid "This is just a test topic, use help(index) for the index"
msgstr "Sa se jis yon sijè tès , sèvi èd(endèks) pou enkèks la"

#. TRANS: This command is descriptive, so can be translated
#: eqnparserhelp.py:113
msgid "variables"
msgstr "Variab yo"

#: eqnparserhelp.py:114
msgid "variables(), return a list of the variables that are currently defined"
msgstr "Variab(), retounen lis variab ki aktyèlman defini yo"

#: eqnparserhelp.py:116
msgid "xor"
msgstr "xor"

#: eqnparserhelp.py:117
msgid ""
"xor(x, y), logical xor. Returns True if either x is True (and y is False) or "
"y is True (and x is False), else returns False"
msgstr ""
"xor(x, y) xor lojikal. Retounen vrè si x vrè (epi y fo) oubyen y vrè (epi x "
"fo), san sa retounen fo"

#. TRANS: help(index), both 'index' and the translation  will work
#: eqnparserhelp.py:131
msgid "index"
msgstr "endèks"

#: eqnparserhelp.py:132
msgid "Topics"
msgstr "sijè yo"

#: eqnparserhelp.py:143
#, python-format
msgid "No help about '%s' available, use help(index) for the index"
msgstr "pa gen èd disponib pou '%s' , sèvi èd(endèks) pou endèks la"

#: layout.py:44
msgid "Clear"
msgstr ""

#: layout.py:53
msgid "Enter"
msgstr ""

#: layout.py:60
msgid "Edit"
msgstr "korije"

#: layout.py:61
msgid "Algebra"
msgstr "aljèb"

#: layout.py:62
msgid "Trigonometry"
msgstr "trigonometri"

#: layout.py:63
msgid "Boolean"
msgstr "Bouleyen"

#: layout.py:118
msgid "Miscellaneous"
msgstr ""

#: layout.py:64
msgid "Constants"
msgstr "Konstant"

#: layout.py:65
msgid "Format"
msgstr "Fòma"

#: layout.py:86
msgid "Label:"
msgstr "Etikèt:"

#: layout.py:118
msgid "All equations"
msgstr "Tout ekwasyon yo"

#: layout.py:118
msgid "My equations"
msgstr "Ekwasyon-m yo"

#: layout.py:198
msgid "Change view between own and all equations"
msgstr ""

#: layout.py:120
msgid "Show history"
msgstr "Montre tout sa ki pase deja"

#: layout.py:120
msgid "Show variables"
msgstr "montre variab"

#: layout.py:203
msgid "Change view between history and variables"
msgstr ""

#. TRANS: multiplication symbol (default: '*')
#: mathlib.py:74
msgid "mul_sym"
msgstr "mul_sym"

#. TRANS: division symbol (default: '/')
#: mathlib.py:79
msgid "div_sym"
msgstr "Div_sym"

#: mathlib.py:132
msgid "Undefined"
msgstr "padefini"

#: mathlib.py:142
msgid "Error: unsupported type"
msgstr "Erè: Kalite san sipò"

#: toolbars.py:36
msgid "Help"
msgstr "èd"

#: toolbars.py:86
msgid "Copy"
msgstr "Kopye"

#: toolbars.py:89
msgid "Paste"
msgstr "pase"

#: toolbars.py:92
msgid "Cut"
msgstr "koupe"

#: toolbars.py:99
msgid "Square"
msgstr "Kare"

#: toolbars.py:103
msgid "Square root"
msgstr "Rasin' kare"

#: toolbars.py:157
msgid "Inverse"
msgstr "Envès"

#: toolbars.py:109
msgid "e to the power x"
msgstr "e ekspozan x"

#: toolbars.py:113
msgid "x to the power y"
msgstr "x ekspozan y"

#: toolbars.py:117
msgid "Natural logarithm"
msgstr "logarit natirèl"

#: toolbars.py:123
msgid "Factorial"
msgstr "Faktè"

#: toolbars.py:131
msgid "Sine"
msgstr "Sinis"

#: toolbars.py:135
msgid "Cosine"
msgstr "Kosinis"

#: toolbars.py:139
msgid "Tangent"
msgstr "Tanjant"

#: toolbars.py:145
msgid "Arc sine"
msgstr "Lak sinis"

#: toolbars.py:149
msgid "Arc cosine"
msgstr "Lak kosinis"

#: toolbars.py:153
msgid "Arc tangent"
msgstr "Lak tanjant"

#: toolbars.py:159
msgid "Hyperbolic sine"
msgstr "sinis ipèbolik"

#: toolbars.py:163
msgid "Hyperbolic cosine"
msgstr "Kosinis ipèbolik"

#: toolbars.py:167
msgid "Hyperbolic tangent"
msgstr "Tanjant ipèbolik"

#: toolbars.py:175
msgid "Logical and"
msgstr "And lojik"

#: toolbars.py:179
msgid "Logical or"
msgstr "Or lojik"

#: toolbars.py:189
msgid "Equals"
msgstr "Egal"

#: toolbars.py:192
msgid "Not equals"
msgstr "Pa egal"

#: toolbars.py:199
msgid "Pi"
msgstr "Pi"

#: toolbars.py:202
msgid "e"
msgstr "e"

#: toolbars.py:280
#, fuzzy
msgid "Plot"
msgstr "plot"

#: toolbars.py:209
msgid "Degrees"
msgstr "Degre"

#: toolbars.py:210
msgid "Radians"
msgstr "Radyan"

#: toolbars.py:292
msgid "Degrees / radians"
msgstr "Degre / radiyan"

#: toolbars.py:301
msgid "Exponent / Scientific notation"
msgstr ""

#: toolbars.py:311
msgid "Number of shown digits"
msgstr ""

#: toolbars.py:316
msgid "Integer formatting base"
msgstr ""
